# Generated by Django 5.1.1 on 2024-09-16 07:56

import course.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(max_length=20, unique=True)),
                ('course_title', models.CharField(max_length=200)),
                ('course_code', models.CharField(blank=True, max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck if the course is inactive')),
                ('course_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_num_modules', models.PositiveIntegerField()),
                ('total_num_assesments', models.PositiveIntegerField()),
                ('total_num_tasks', models.PositiveIntegerField()),
                ('total_duration', models.PositiveIntegerField(help_text='Total duration in months')),
                ('entry_qualification', models.CharField(help_text='Entry qualification required', max_length=100)),
                ('medium', models.CharField(choices=[('English', 'English'), ('Sinhala', 'Sinhala'), ('Tamil', 'Tamil')], max_length=50)),
                ('delivery_mode', models.CharField(choices=[('Classroom', 'Classroom'), ('Online', 'Online'), ('Blended', 'Blended')], max_length=50)),
                ('course_mode', models.CharField(choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=50)),
                ('curriculum_category', models.CharField(help_text='Select curriculum category', max_length=100)),
                ('curriculum_availability', models.CharField(help_text='Curriculum availability status', max_length=100)),
                ('batches_per_year', models.PositiveIntegerField(help_text='Number of batches per annum')),
                ('duration_months', models.PositiveIntegerField(help_text='Course duration in months (without OJT)')),
                ('capacity_per_batch', models.PositiveIntegerField(help_text='Number of students per batch')),
                ('theory_hours', models.PositiveIntegerField(help_text='Total theory hours')),
                ('practical_hours', models.PositiveIntegerField(help_text='Total practical hours')),
                ('assignment_hours', models.PositiveIntegerField(default=0, help_text='Total hours for assignments/projects')),
                ('ojt_period_months', models.PositiveIntegerField(default=0, help_text='OJT period in months (0 if not applicable)')),
                ('course_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Course fee in Rs. (Tick if free)', max_digits=10)),
                ('is_free', models.BooleanField(default=False, help_text='Tick if the course is free')),
                ('tools_available', models.TextField(blank=True, help_text='List of tools available')),
                ('equipment_available', models.TextField(blank=True, help_text='List of equipment available')),
                ('machinery_available', models.TextField(blank=True, help_text='List of machinery available')),
                ('industry_sector', models.CharField(help_text='Select industry/sector', max_length=100)),
                ('equivalent_course', models.CharField(blank=True, help_text='Equivalent course (if any)', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('min_students', models.PositiveIntegerField(validators=[course.models.validate_min_students])),
                ('max_students', models.PositiveIntegerField(validators=[course.models.validate_max_students])),
                ('demos', models.ManyToManyField(blank=True, limit_choices_to={'groups__name': 'Lab Assistant'}, related_name='demo_batches', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, limit_choices_to={'groups__name': 'Student'}, related_name='enrolled_batches', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(limit_choices_to={'groups__name': 'Teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_batches', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_present', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.batch')),
            ],
        ),
        migrations.CreateModel(
            name='CompletedModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=100)),
                ('date_completed', models.DateField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.batch')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompletedTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100)),
                ('date_completed', models.DateField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.batch')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoursePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.batch')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=255)),
                ('total_theory_hours', models.PositiveIntegerField()),
                ('total_practical_hours', models.PositiveIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255)),
                ('total_hours', models.PositiveIntegerField(help_text='Total hours for this task')),
                ('is_theory', models.BooleanField(default=True)),
                ('learning_objectives', models.TextField(blank=True, help_text='What students will learn', null=True)),
                ('teaching_activities', models.TextField(blank=True, help_text='Teaching activities for the task', null=True)),
                ('resources', models.TextField(blank=True, help_text='Required resources and materials', null=True)),
                ('assessment_activities', models.TextField(blank=True, help_text='Assessment activities to evaluate student learning', null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.module')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.task')),
            ],
        ),
    ]
